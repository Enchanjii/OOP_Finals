import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Timestamp;
import javax.swing.JOptionPane;
import java.sql.ResultSet;

public class JournalFrame extends javax.swing.JFrame {
    private HomeFrame homeFrameInstance;
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(JournalFrame.class.getName());

    
    public JournalFrame() {
        initComponents();
    }
    
public JournalFrame(HomeFrame home) { 
        initComponents();
        this.homeFrameInstance = home;
        this.setResizable(false);
        loadRecentJournal();
        recentJournalTextArea.setEditable(false); // Make it read-only
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        submitBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        recentJournalTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(220, 245, 230));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setText("Journal");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        submitBtn.setBackground(new java.awt.Color(59, 89, 106));
        submitBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        submitBtn.setForeground(new java.awt.Color(255, 255, 255));
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("How are your feeling today?");

        backBtn.setBackground(new java.awt.Color(59, 89, 106));
        backBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Recent Journal:");

        recentJournalTextArea.setColumns(20);
        recentJournalTextArea.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        recentJournalTextArea.setRows(5);
        jScrollPane1.setViewportView(recentJournalTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(submitBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addComponent(submitBtn)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
     String journalText = jTextArea1.getText();
        String currentUserEmail = null;

        // 1. Check if the journal is empty
        if (journalText.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Journal entry cannot be empty.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // 2. Get the user's email from the HomeFrame instance
        if (this.homeFrameInstance != null) {
            currentUserEmail = this.homeFrameInstance.getCurrentUserEmail();
        } else {
            // This should not happen if you followed the previous step
            JOptionPane.showMessageDialog(this, "Error: No user session found.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // 3. Database Query
        // !!! REPLACE THESE WITH YOUR DATABASE DETAILS !!!
        String dbUrl = "jdbc:mysql://localhost:3306/user_database";
        String dbUser = "root";
        String dbPassword = "";

        String sql = "INSERT INTO journals (user_email, journal_entry, entry_date) VALUES (?, ?, ?)";

        try (Connection conn = DriverManager.getConnection(dbUrl, dbUser, dbPassword);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            // 4. Set the parameters for the query
            pstmt.setString(1, currentUserEmail);
            pstmt.setString(2, journalText);
            pstmt.setTimestamp(3, new Timestamp(System.currentTimeMillis()));

            // 5. Execute the query
            int rowsInserted = pstmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "Journal entry saved successfully!");
                jTextArea1.setText(""); // Clear the text area after saving
                loadRecentJournal();    
            }

        } catch (SQLException e) {
            logger.log(java.util.logging.Level.SEVERE, "Database error saving journal", e);
            JOptionPane.showMessageDialog(this, "Error saving journal: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        if (this.homeFrameInstance != null) {
            // If this frame was opened by HomeFrame, show it again
            this.homeFrameInstance.setVisible(true);
            this.homeFrameInstance.loadUserData(); // Optional: Refresh user data on return
        }
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

   private void loadRecentJournal() {
    String currentUserEmail = null;

    // 1. Get the user's email from the HomeFrame instance
    if (this.homeFrameInstance != null) {
        currentUserEmail = this.homeFrameInstance.getCurrentUserEmail();
    } else {
        // No user session, can't load journal
        recentJournalTextArea.setText("Could not load recent journal: No user session.");
        return;
    }

    // 2. Database Query
    // !!! Make sure these details match your database !!!
    String dbUrl = "jdbc:mysql://localhost:3306/user_database";
    String dbUser = "root";
    String dbPassword = "";

    // SQL query to get the latest entry for this user
    String sql = "SELECT journal_entry FROM journals WHERE user_email = ? ORDER BY entry_date DESC LIMIT 1";

    try (Connection conn = DriverManager.getConnection(dbUrl, dbUser, dbPassword);
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        // 3. Set the user's email as the parameter
        pstmt.setString(1, currentUserEmail);

        try (ResultSet rs = pstmt.executeQuery()) {
            if (rs.next()) {
                // 4. Found a journal, display it.
                String recentJournal = rs.getString("journal_entry");
                recentJournalTextArea.setText(recentJournal);
            } else {
                // 5. No journal found
                recentJournalTextArea.setText("No recent journal entries found.");
            }
        }

    } catch (SQLException e) {
        logger.log(java.util.logging.Level.SEVERE, "Database error loading recent journal", e);
        recentJournalTextArea.setText("Error loading journal. Check logs.");
    }
}
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new JournalFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea recentJournalTextArea;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables
}
